{"ast":null,"code":"import React from'react';import Typed from'typed.js';import{jsx as _jsx}from\"react/jsx-runtime\";function HeaderText(){/* This component creates the typrwriter effect */ // Reference to store the DOM element containing the animation\nvar el=React.useRef(null);// Reference to store the Typed instance itself\nvar typed=React.useRef(null);React.useEffect(function(){var options={strings:['Track your to-dos','Trodo'],typeSpeed:30,backSpeed:40};// elRef refers to the <span> rendered below\ntyped.current=new Typed(el.current,options);return function(){// Removes the typed text\ntyped.current.destroy();};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"wrap\",children:/*#__PURE__*/_jsx(\"div\",{className:\"type-wrap\",children:/*#__PURE__*/_jsx(\"span\",{style:{whiteSpace:'pre'},ref:el})})});}export default HeaderText;","map":{"version":3,"sources":["/Users/niksaravan/Desktop/PUI/Homework_8/Trodo-landing-page/src/Components/HeaderText.jsx"],"names":["React","Typed","HeaderText","el","useRef","typed","useEffect","options","strings","typeSpeed","backSpeed","current","destroy","whiteSpace"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,2CAEA,QAASC,CAAAA,UAAT,EAAsB,CAClB,kDADkB,CAElB;AACH,GAAMC,CAAAA,EAAE,CAAGH,KAAK,CAACI,MAAN,CAAa,IAAb,CAAX,CACG;AACH,GAAMC,CAAAA,KAAK,CAAGL,KAAK,CAACI,MAAN,CAAa,IAAb,CAAd,CAECJ,KAAK,CAACM,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,OAAO,CAAG,CACZC,OAAO,CAAE,CACT,mBADS,CAET,OAFS,CADG,CAKZC,SAAS,CAAE,EALC,CAMZC,SAAS,CAAE,EANC,CAAhB,CASA;AACAL,KAAK,CAACM,OAAN,CAAgB,GAAIV,CAAAA,KAAJ,CAAUE,EAAE,CAACQ,OAAb,CAAsBJ,OAAtB,CAAhB,CAEA,MAAO,WAAM,CACX;AACAF,KAAK,CAACM,OAAN,CAAcC,OAAd,GACD,CAHD,CAID,CAjBD,CAiBG,EAjBH,EAmBA,mBACE,YAAK,SAAS,CAAC,MAAf,uBACE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAM,KAAK,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAb,CAAoC,GAAG,CAAEV,EAAzC,EADF,EADF,EADF,CAOD,CAED,cAAeD,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport Typed from 'typed.js';\n\nfunction HeaderText() {\n    /* This component creates the typrwriter effect */\n    // Reference to store the DOM element containing the animation\n\tconst el = React.useRef(null);\n    // Reference to store the Typed instance itself\n\tconst typed = React.useRef(null);\n\n  React.useEffect(() => {\n    const options = {\n        strings: [\n        'Track your to-dos',\n        'Trodo'\n      ],\n        typeSpeed: 30,\n        backSpeed: 40,\n    };\n    \n    // elRef refers to the <span> rendered below\n    typed.current = new Typed(el.current, options);\n    \n    return () => {\n      // Removes the typed text\n      typed.current.destroy();\n    }\n  }, [])\n\n  return (\n    <div className=\"wrap\">\n      <div className=\"type-wrap\">\n        <span style={{ whiteSpace: 'pre' }} ref={el} />\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderText;"]},"metadata":{},"sourceType":"module"}