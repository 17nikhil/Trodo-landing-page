{"ast":null,"code":"var _jsxFileName = \"/Users/niksaravan/Desktop/PUI/new-landing-page/src/Components/About.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useInView } from \"react-intersection-observer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction About(props) {\n  _s();\n\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0.4\n  });\n  /* return (\n      <div id='about'>\n          <div className='about-image'>\n              <img src={props.image} alt='supporting image for why trodo?' />\n          </div>\n          <div className='about-text'>\n              <img src={props.icon} alt='icon for the feature' />\n              <h2>{props.title}</h2>\n              <p>{props.details}</p>\n          </div>\n      </div>\n  ) */\n\n  const renderContent = () => {\n    if (!props.flipped) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"about\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"about-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.image,\n              alt: \"supporting image for why trodo?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"about-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.icon,\n              alt: \"icon for the feature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"about\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"about-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.icon,\n              alt: \"icon for the feature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"about-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.image,\n              alt: \"supporting image for why trodo?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: inView ? \"slider slider--zoom\" : \"slider\",\n    ref: ref,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(About, \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n  return [useInView];\n});\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/niksaravan/Desktop/PUI/new-landing-page/src/Components/About.jsx"],"names":["React","useInView","About","props","ref","inView","threshold","renderContent","flipped","image","icon","title","details"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElB,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBJ,SAAS,CAAC;AAC9BK,IAAAA,SAAS,EAAE;AADmB,GAAD,CAAjC;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAG,CAACJ,KAAK,CAACK,OAAV,EAAkB;AACd,0BAAO;AAAA,+BACH;AAAK,UAAA,EAAE,EAAC,OAAR;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEL,KAAK,CAACM,KAAhB;AAAuB,cAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEN,KAAK,CAACO,IAAhB;AAAsB,cAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAIR,KAAK,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,uBAAP;AAYH,KAbD,MAcI;AACA,0BAAO;AAAA,+BACH;AAAK,UAAA,EAAE,EAAC,OAAR;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAET,KAAK,CAACO,IAAhB;AAAsB,cAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAIR,KAAK,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAET,KAAK,CAACM,KAAhB;AAAuB,cAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,uBAAP;AAYH;AACJ,GA7BD;;AA+BA,sBACA;AAAK,IAAA,SAAS,EAAEJ,MAAM,GAAG,qBAAH,GAA2B,QAAjD;AAA2D,IAAA,GAAG,EAAED,GAAhE;AAAA,cACKG,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GAvDQL,K;UAEmBD,S;;;KAFnBC,K;AAyDT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useInView } from \"react-intersection-observer\";\n\nfunction About(props) {\n\n    const { ref, inView } = useInView({\n        threshold: 0.4,\n      });\n\n    /* return (\n        <div id='about'>\n            <div className='about-image'>\n                <img src={props.image} alt='supporting image for why trodo?' />\n            </div>\n            <div className='about-text'>\n                <img src={props.icon} alt='icon for the feature' />\n                <h2>{props.title}</h2>\n                <p>{props.details}</p>\n            </div>\n        </div>\n    ) */\n\n    const renderContent = () => {\n        if(!props.flipped){\n            return <>\n                <div id='about'>\n                    <div className='about-image'>\n                        <img src={props.image} alt='supporting image for why trodo?' />\n                    </div>\n                    <div className='about-text'>\n                        <img src={props.icon} alt='icon for the feature' />\n                        <h2>{props.title}</h2>\n                        <p>{props.details}</p>\n                    </div>\n                </div>\n            </>\n        }\n        else{\n            return <>\n                <div id='about'>\n                    <div className='about-text'>\n                        <img src={props.icon} alt='icon for the feature' />\n                        <h2>{props.title}</h2>\n                        <p>{props.details}</p>\n                    </div>\n                    <div className='about-image'>\n                        <img src={props.image} alt='supporting image for why trodo?' />\n                    </div>\n                </div>\n            </>\n        }\n    }\n\n    return( \n    <div className={inView ? \"slider slider--zoom\" : \"slider\"} ref={ref}>\n        {renderContent()}\n    </div>\n    )\n}\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}